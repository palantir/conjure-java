# don't forget to update conjure-python/src/test/resources/types/example-types.yml
types:
  imports:
    ExampleExternalReference:
      base-type: string
      external:
        java: test.api.ExampleExternalReference
    ExternalLong:
      base-type: safelong
      external:
        java: java.lang.Long
    ExternalString:
      base-type: string
      external:
        java: java.lang.String
    SafeExternalLong:
      base-type: safelong
      external:
        java: java.lang.Long
      safety: safe
  definitions:
    default-package: com.palantir.product
    objects:
      StringExample:
        fields:
          string: string
      IntegerExample:
        fields:
          integer: integer
      SafeLongExample:
        fields:
          safeLongValue: safelong
      SafeExternalLongExample:
        fields:
          safeExternalLongValue: SafeExternalLong
          optionalSafeExternalLong: optional<SafeExternalLong>
          safeExternalLongList: list<SafeExternalLong>
          safeExternalLongSet: set<SafeExternalLong>
      RidExample:
        fields:
          ridValue: rid
      BearerTokenExample:
        fields:
          bearerTokenValue: bearertoken
      DateTimeExample:
        fields:
          datetime: datetime
      DoubleExample:
        fields:
          doubleValue: double
      BinaryExample:
        fields:
          binary: binary
      OptionalExample:
        fields:
          item:
            type: optional<string>
            safety: safe
      CovariantOptionalExample:
        fields:
          item: optional<any>
          setItem: optional<set<StringAliasExample>>
      OptionalAliasExample:
        fields:
          optionalAlias: OptionalAlias
      ListExample:
        fields:
          items: 
            type: list<string>
            safety: safe
          primitiveItems: list<integer>
          doubleItems: list<double>
          optionalItems: list<optional<string>>
          aliasOptionalItems: list<OptionalAlias>
          nestedItems: list<list<string>>
      CovariantListExample:
        fields:
          items: list<any>
          externalItems: list<ExampleExternalReference>
      SetExample:
        fields:
          items: set<string>
          doubleItems: set<double>
      MapExample:
        fields:
          items: map<string, string>
          optionalItems: map<string, optional<string>>
          aliasOptionalItems: map<string, OptionalAlias>
      EnumExample:
        docs: |
          This enumerates the numbers 1:2 also 100.
        values:
          - ONE
          - value: TWO
            deprecated: Prefer `ONE` where possible.
          - value: ONE_HUNDRED
            docs: Value of 100.
            deprecated: One is easier to manage.
      EnumFieldExample:
        fields:
          enum: EnumExample
      BooleanExample:
        fields:
          coin: boolean
      AnyExample:
        fields:
          any: any
      AnyMapExample:
        fields:
          items: map<string, any>
      UuidExample:
        fields:
          uuid: uuid
      StringAliasExample:
        alias: string
        safety: safe
      NestedStringAliasExample:
        alias: StringAliasExample
      DoubleAliasExample:
        alias: double
      IntegerAliasExample:
        alias: integer
      BooleanAliasExample:
        alias: boolean
      SafeLongAliasExample:
        alias: safelong
        safety: safe
      RidAliasExample:
        alias: rid
      BearerTokenAliasExample:
        alias: bearertoken
      UuidAliasExample:
        alias: uuid
      MapAliasExample:
        alias: map<string, any>
      OptionalMapAliasExample:
        alias: optional<map<string, any>>
      OptionalListAliasExample:
        alias: optional<list<string>>
      OptionalSetAliasExample:
        alias: optional<set<string>>
      ReferenceAliasExample:
        alias: AnyExample
      DateTimeAliasExample:
        alias: datetime
      BinaryAliasExample:
        alias: binary
      PrimitiveOptionalsExample:
        fields:
          num: optional<double>
          bool: optional<boolean>
          integer: optional<integer>
          safelong: optional<safelong>
          rid: optional<rid>
          bearertoken: optional<bearertoken>
          uuid: optional<uuid>
          map: optional<map<string,string>>
          list: optional<list<string>>
          set: optional<set<string>>
          aliasOne: optional<StringAliasOne>
          aliasTwo: StringAliasTwo
          aliasList: optional<ListAlias>
          aliasMap: optional<MapAliasExample>
          aliasOptional: OptionalAlias
          aliasOptionalMap: OptionalMapAliasExample
          aliasOptionalList: OptionalListAliasExample
          aliasOptionalSet: OptionalSetAliasExample
      ExternalLongAliasExample:
        alias: ExternalLong
      ExternalStringAliasExample:
        alias: ExternalString
      ExternalLongExample:
        fields:
          externalLong: ExternalLong
          optionalExternalLong: optional<ExternalLong>
          listExternalLong: list<ExternalLong>
      ManyFieldExample:
        fields:
          string:
            type: string
            docs: docs for string field
          integer:
            type: integer
            docs: docs for integer field
          doubleValue:
            type: double
            docs: docs for doubleValue field
          optionalItem:
            type: optional<string>
            deprecated: an optional field is deprecated
            docs: docs for optionalItem field
          items:
            type: list<string>
            docs: docs for items field with exciting character$ used by javapoet.
          set:
            type: set<string>
            docs: docs for set field
          map:
            type: map<string, string>
            deprecated: deprecation documentation.
          alias:
            type: StringAliasExample
            docs: docs for alias field
            deprecated: This field is deprecated.
      UnionTypeExample:
        docs: A type which can either be a StringExample, a set of strings, or an integer.
        union:
          stringExample:
            type: StringExample
            docs: Docs for when UnionTypeExample is of type StringExample.
          thisFieldIsAnInteger: integer
          alsoAnInteger: integer
          if: integer # some 'bad' member names!
          new: integer
          interface: integer
          completed: integer
          unknown: integer
          optional: optional<string>
          list: list<string>
          set: set<string>
          map: map<string, string>
          optionalAlias: OptionalAlias
          listAlias: ListAlias
          setAlias: SetAlias
          mapAlias: MapAliasExample
          booleanField:
            type: boolean
            safety: safe
      UnionWithUnknownString:
        union:
          unknown: string
      EmptyUnionTypeExample:
        union: {}
      ExternalLongUnionExample:
        docs: A union of a safe long.
        union:
          safeLong: SafeExternalLong
      EmptyObjectExample:
        fields: {}
      AliasAsMapKeyExample:
        fields:
          strings: map<StringAliasExample, ManyFieldExample>
          rids: map<RidAliasExample, ManyFieldExample>
          bearertokens: map<BearerTokenAliasExample, ManyFieldExample>
          integers: map<IntegerAliasExample, ManyFieldExample>
          # doubles: map<DoubleAliasExample, ManyFieldExample> # typescript freaks out with the 'NaN'
          safelongs: map<SafeLongAliasExample, ManyFieldExample>
          datetimes: map<DateTimeAliasExample, ManyFieldExample>
          uuids: map<UuidAliasExample, ManyFieldExample>
      ReservedKeyExample:
        fields:
          package:
            type: string
          interface:
            type: string
          field-name-with-dashes:
            type: string
          primitve-field-name-with-dashes:
            type: integer
          memoizedHashCode:
            type: integer
          result:
            type: integer
      Union:
        union:
          foo: string
          bar:
            type: integer
            deprecated: Int is deprecated.
          baz:
            type: ExternalLong
            docs: 64-bit integer.
            deprecated: Prefer `foo`.
      SingleUnion:
        union:
          foo:
            type: string
            safety: safe
      SimpleEnum:
        values:
          - VALUE
      StringAliasOne:
        alias: string
      StringAliasTwo:
        alias: optional<StringAliasOne>
      StringAliasThree:
        alias: StringAliasTwo
      BinaryAliasOne:
        alias: binary
      BinaryAliasTwo:
        alias: BinaryAliasOne
      ExternalLongAliasOne:
        alias: ExternalLong
      ExternalLongAliasTwo:
        alias: ExternalLongAliasOne
      SafeExternalLongAlias:
        alias: SafeExternalLong
      OptionalAlias:
        alias: optional<string>
        safety: safe
      ListAlias:
        alias: list<string>
      SetAlias:
        alias: set<string>
      RiskyNames:
        fields:
          var: string
          class: string
          int: string
          len: string
