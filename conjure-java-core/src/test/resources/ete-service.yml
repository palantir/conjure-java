types:
  imports:
    StringAliasExampleImport:
      base-type: string
      external:
        java: com.palantir.product.StringAliasExample
    Long:
      base-type: string
      external:
        java: java.lang.Long
  definitions:
    default-package: com.palantir.product
    objects:
      StringAliasExample:
        alias: string
      NestedStringAliasExample:
        alias: StringAliasExample
      SimpleEnum:
        values:
          - VALUE

services:
  EmptyPathService:
    name: EmptyPathService
    package: com.palantir.product
    default-auth: none
    base-path: /

    endpoints:
      emptyPath:
        http: GET /
        returns: boolean

  EteService:
    name: Ete Service
    package: com.palantir.product
    default-auth: header
    base-path: /base

    endpoints:
      string:
        http: GET /string
        returns: string

      integer:
        http: GET /integer
        returns: integer

      double_:
        http: GET /double
        returns: double

      boolean_:
        http: GET /boolean
        returns: boolean

      safelong:
        http: GET /safelong
        returns: safelong

      rid:
        http: GET /rid
        returns: rid

      bearertoken:
        http: GET /bearertoken
        returns: bearertoken

      optionalString:
        http: GET /optionalString
        returns: optional<string>

      optionalEmpty:
        http: GET /optionalEmpty
        returns: optional<string>

      datetime:
        http: GET /datetime
        returns: datetime

      binary:
        http: GET /binary
        returns: binary

      path:
        http: GET /path/{param}
        args:
          param: string
        returns: string

      externalLongPath:
        http: GET /externalLong/{param}
        args:
          param: Long
        returns: Long

      notNullBody:
        http: POST /notNullBody
        args:
          notNullBody: StringAliasExample
        returns: StringAliasExample

      aliasOne:
        http: GET /aliasOne
        args:
          queryParamName:
            param-type: query
            type: StringAliasExample
        returns: StringAliasExample

      optionalAliasOne:
        http: GET /optionalAliasOne
        args:
          queryParamName:
            param-type: query
            type: optional<StringAliasExample>
        returns: StringAliasExample

      aliasTwo:
        http: GET /aliasTwo
        args:
          queryParamName:
            param-type: query
            type: NestedStringAliasExample
        returns: NestedStringAliasExample

      notNullBodyExternalImport:
        http: POST /external/notNullBody
        args:
          notNullBody: StringAliasExampleImport
        returns: StringAliasExampleImport

      optionalBodyExternalImport:
        http: POST /external/optional-body
        args:
          body: optional<StringAliasExampleImport>
        returns: optional<StringAliasExampleImport>

      optionalQueryExternalImport:
        http: POST /external/optional-query
        args:
          query:
            param-type: query
            type: optional<StringAliasExampleImport>
        returns: optional<StringAliasExampleImport>

      noReturn:
        http: POST /no-return

      enumQuery:
        http: GET /enum/query
        args:
          queryParamName:
            param-type: query
            type: SimpleEnum
        returns: SimpleEnum

      enumListQuery:
        http: GET /enum/list/query
        args:
          queryParamName:
            param-type: query
            type: list<SimpleEnum>
        returns: list<SimpleEnum>

      optionalEnumQuery:
        http: GET /enum/optional/query
        args:
          queryParamName:
            param-type: query
            type: optional<SimpleEnum>
        returns: optional<SimpleEnum>

      enumHeader:
        http: GET /enum/header
        args:
          headerParameter:
            param-type: header
            param-id: Custom-Header
            type: SimpleEnum
        returns: SimpleEnum
