/*
 * (c) Copyright 2018 Palantir Technologies Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "$rootDir/gradle/publish-jar.gradle"

sourceSets {
    integrationInput
    test {
        compileClasspath += integrationInput.output
        runtimeClasspath += integrationInput.output
    }
}

spotless {
    java {
        targetExclude sourceSets.integrationInput.allJava
    }
}

idea {
    module {
        testSourceDirs += sourceSets.integrationInput.java.srcDirs
    }
}

tasks.checkstyleIntegrationInput.enabled = false

dependencies {
    compile project(':conjure-undertow-lib')
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    compile 'com.palantir.javaformat:palantir-java-format'
    compile 'com.google.guava:guava'
    compile 'com.palantir.conjure:conjure-generator-common'
    compile 'com.palantir.conjure.java.api:errors'
    compile 'com.palantir.ri:resource-identifier'
    compile 'com.palantir.syntactic-paths:syntactic-paths'
    compile 'com.palantir.tokens:auth-tokens'
    compile 'com.squareup:javapoet'
    compile 'jakarta.annotation:jakarta.annotation-api'
    compile 'jakarta.validation:jakarta.validation-api'
    compile 'org.apache.commons:commons-lang3'
    compile 'org.slf4j:slf4j-api'
    compile 'com.atlassian.commonmark:commonmark'

    implementation 'org.glassfish.jersey.core:jersey-common'
    implementation 'com.palantir.dialogue:dialogue-target'
    implementation 'com.palantir.dialogue:dialogue-serde'
    implementation 'com.palantir.common:streams'

    testCompile 'com.palantir.conjure:conjure-core'
    testCompile project(':conjure-java-undertow-runtime')
    testCompile 'com.palantir.conjure.java.runtime:conjure-java-jackson-serialization'
    testCompile 'com.palantir.conjure.java.runtime:conjure-java-jersey-server'
    testCompile 'com.palantir.conjure.java.runtime:conjure-java-jaxrs-client'
    testCompile 'com.palantir.conjure.java.runtime:conjure-java-retrofit2-client'
    testCompile 'com.palantir.safe-logging:preconditions-assertj'
    testCompile 'com.palantir.conjure.java.runtime:keystores'
    testCompile 'com.palantir.tracing:tracing'
    testCompile 'io.dropwizard:dropwizard-testing'
    testCompile 'org.assertj:assertj-core'
    testCompile 'org.mockito:mockito-core'
    testCompile 'jakarta.xml.bind:jakarta.xml.bind-api'
    testImplementation 'org.junit.jupiter:junit-jupiter'

    integrationInputCompile project(':conjure-lib')
    integrationInputCompile project(':conjure-undertow-lib')
    integrationInputCompile 'com.google.guava:guava'
    integrationInputCompile 'com.palantir.conjure.java.api:errors'
    integrationInputCompile 'com.palantir.conjure.java.runtime:conjure-java-retrofit2-client'
    integrationInputCompile 'jakarta.annotation:jakarta.annotation-api'
    integrationInputCompile 'jakarta.validation:jakarta.validation-api'
    integrationInputCompile 'jakarta.ws.rs:jakarta.ws.rs-api'
    integrationInputCompile 'com.palantir.dialogue:dialogue-target'

    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'
    testCompileOnly 'org.immutables:value::annotations'
}

tasks.withType(JavaCompile) {
    // this complains about the integrationInput directory
    options.errorprone.disable 'StrictUnusedVariable'
}
