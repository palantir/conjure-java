{
  "version" : 1,
  "errors" : [ ],
  "types" : [ {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ConjureDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "version",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        }
      }, {
        "fieldName" : "errors",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "ErrorDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "types",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "TypeDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "services",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "ServiceDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "TypeName",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "name",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        },
        "docs" : "The name of the custom Conjure type or service. It must be in UpperCamelCase. Numbers are permitted, but not at the beginning of a word. Allowed names: \"FooBar\", \"XYCoordinate\", \"Build2Request\". Disallowed names: \"fooBar\", \"2BuildRequest\".\n"
      }, {
        "fieldName" : "package",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        },
        "docs" : "A period-delimited string of package names. The package names must be lowercase. Numbers are permitted, but not at the beginning of a package name. Allowed packages: \"foo\", \"com.palantir.bar\", \"com.palantir.foundry.build2\". Disallowed packages: \"Foo\", \"com.palantir.foundry.2build\".\n"
      } ]
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "Documentation",
        "package" : "com.palantir.conjure.spec"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "ErrorNamespace",
        "package" : "com.palantir.conjure.spec"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      }
    }
  }, {
    "type" : "enum",
    "enum" : {
      "typeName" : {
        "name" : "ErrorCode",
        "package" : "com.palantir.conjure.spec"
      },
      "values" : [ {
        "value" : "PERMISSION_DENIED"
      }, {
        "value" : "INVALID_ARGUMENT"
      }, {
        "value" : "NOT_FOUND"
      }, {
        "value" : "CONFLICT"
      }, {
        "value" : "REQUEST_ENTITY_TOO_LARGE"
      }, {
        "value" : "FAILED_PRECONDITION"
      }, {
        "value" : "INTERNAL"
      }, {
        "value" : "TIMEOUT"
      }, {
        "value" : "CUSTOM_CLIENT"
      }, {
        "value" : "CUSTOM_SERVER"
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ErrorDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "errorName",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "TypeName",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "namespace",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ErrorNamespace",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "code",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ErrorCode",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "safeArgs",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "FieldDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "unsafeArgs",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "FieldDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "union",
    "union" : {
      "typeName" : {
        "name" : "Type",
        "package" : "com.palantir.conjure.spec"
      },
      "union" : [ {
        "fieldName" : "primitive",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "PrimitiveType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "optional",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "OptionalType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "list",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ListType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "set",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "SetType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "map",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "MapType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "reference",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "TypeName",
            "package" : "com.palantir.conjure.spec"
          }
        },
        "docs" : "The name and package of a custom Conjure type. The custom type must be defined in the \"types\" section."
      }, {
        "fieldName" : "external",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ExternalReference",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ExternalReference",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "externalReference",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "TypeName",
            "package" : "com.palantir.conjure.spec"
          }
        },
        "docs" : "An identifier for a non-Conjure type which is already defined in a different language (e.g. Java)."
      }, {
        "fieldName" : "fallback",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "Type",
            "package" : "com.palantir.conjure.spec"
          }
        },
        "docs" : "Other language generators may use the provided fallback if the non-Conjure type is not available. The ANY PrimitiveType is permissible for all external types, but a more specific definition is preferrable.\n"
      } ]
    }
  }, {
    "type" : "enum",
    "enum" : {
      "typeName" : {
        "name" : "PrimitiveType",
        "package" : "com.palantir.conjure.spec"
      },
      "values" : [ {
        "value" : "STRING"
      }, {
        "value" : "DATETIME"
      }, {
        "value" : "INTEGER"
      }, {
        "value" : "DOUBLE"
      }, {
        "value" : "SAFELONG"
      }, {
        "value" : "BINARY"
      }, {
        "value" : "ANY"
      }, {
        "value" : "BOOLEAN"
      }, {
        "value" : "UUID"
      }, {
        "value" : "RID"
      }, {
        "value" : "BEARERTOKEN"
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "OptionalType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "itemType",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "Type",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ListType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "itemType",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "Type",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "SetType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "itemType",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "Type",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "MapType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "keyType",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "Type",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "valueType",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "Type",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "union",
    "union" : {
      "typeName" : {
        "name" : "TypeDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "union" : [ {
        "fieldName" : "alias",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "AliasDefinition",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "enum",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "EnumDefinition",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "object",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ObjectDefinition",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "union",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "UnionDefinition",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "AliasDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "typeName",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "TypeName",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "alias",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "Type",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "EnumDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "typeName",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "TypeName",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "values",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EnumValueDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ObjectDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "typeName",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "TypeName",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "fields",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "FieldDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "UnionDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "typeName",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "TypeName",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "union",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "FieldDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "EnumValueDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "FieldDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "fieldName",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "FieldName",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "type",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "Type",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "FieldName",
        "package" : "com.palantir.conjure.spec"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      },
      "docs" : "Should be in lowerCamelCase, but kebab-case and snake_case are also permitted."
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ServiceDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "serviceName",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "TypeName",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "endpoints",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EndpointDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "EndpointDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "endpointName",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "EndpointName",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "httpMethod",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "HttpMethod",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "httpPath",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "HttpPath",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "auth",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "AuthType",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "args",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "ArgumentDefinition",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "returns",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Type",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "deprecated",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "markers",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Type",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "EndpointName",
        "package" : "com.palantir.conjure.spec"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      },
      "docs" : "Should be in lowerCamelCase."
    }
  }, {
    "type" : "enum",
    "enum" : {
      "typeName" : {
        "name" : "HttpMethod",
        "package" : "com.palantir.conjure.spec"
      },
      "values" : [ {
        "value" : "GET"
      }, {
        "value" : "POST"
      }, {
        "value" : "PUT"
      }, {
        "value" : "DELETE"
      } ]
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "HttpPath",
        "package" : "com.palantir.conjure.spec"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      }
    }
  }, {
    "type" : "union",
    "union" : {
      "typeName" : {
        "name" : "AuthType",
        "package" : "com.palantir.conjure.spec"
      },
      "union" : [ {
        "fieldName" : "header",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "HeaderAuthType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "cookie",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "CookieAuthType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "HeaderAuthType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "CookieAuthType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "cookieName",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ArgumentDefinition",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "argName",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ArgumentName",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "type",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "Type",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "paramType",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ParameterType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "docs",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Documentation",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      }, {
        "fieldName" : "markers",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "reference",
              "reference" : {
                "name" : "Type",
                "package" : "com.palantir.conjure.spec"
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "ArgumentName",
        "package" : "com.palantir.conjure.spec"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      },
      "docs" : "Must be in lowerCamelCase. Numbers are permitted, but not at the beginning of a word. Allowed argument names: \"fooBar\", \"build2Request\". Disallowed names: \"FooBar\", \"2BuildRequest\".\n"
    }
  }, {
    "type" : "union",
    "union" : {
      "typeName" : {
        "name" : "ParameterType",
        "package" : "com.palantir.conjure.spec"
      },
      "union" : [ {
        "fieldName" : "body",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "BodyParameterType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "header",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "HeaderParameterType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "path",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "PathParameterType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      }, {
        "fieldName" : "query",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "QueryParameterType",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "BodyParameterType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "HeaderParameterType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "paramId",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ParameterId",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "PathParameterType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "QueryParameterType",
        "package" : "com.palantir.conjure.spec"
      },
      "fields" : [ {
        "fieldName" : "paramId",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ParameterId",
            "package" : "com.palantir.conjure.spec"
          }
        }
      } ]
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "ParameterId",
        "package" : "com.palantir.conjure.spec"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      },
      "docs" : "For header parameters, the parameter id must be in Upper-Kebab-Case. For query parameters, the parameter id must be in lowerCamelCase. Numbers are permitted, but not at the beginning of a word.\n"
    }
  } ],
  "services" : [ ]
}