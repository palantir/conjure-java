/*
 * (c) Copyright 2018 Palantir Technologies Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static org.apache.tools.ant.taskdefs.condition.Os.*

ext {
    osClassifier = isFamily(FAMILY_MAC) ? "osx" : "linux"
}

sourceSets {
    spec
}

configurations {
    testCases
    verificationApi
    verificationServer
}

idea {
    module {
        sourceDirs += sourceSets.spec.java.srcDirs
        scopes.COMPILE.plus += [configurations.specCompile]
    }
}

dependencies {
    testCompile project(':conjure-java-core')
    testCompile 'junit:junit'
    testCompile 'org.assertj:assertj-core'
    testCompile 'org.mockito:mockito-core'
    testCompile 'com.palantir.remoting3:jaxrs-clients'
    testCompile 'io.dropwizard:dropwizard-testing'
    testCompile sourceSets.spec.output

    testCases 'com.palantir.conjure.verification:test-cases'
    verificationApi 'com.palantir.conjure.verification:verification-api'
    verificationServer "com.palantir.conjure.verification:verification-server::${osClassifier}@tgz"

    specCompile project(':conjure-lib')
    specCompile project(':conjure-java-core')

    processor 'org.immutables:value'
}

tasks.compileTestJava {
    options.compilerArgs += ['-Xep:Slf4jLogsafeArgs:OFF']
}

task copyJavaExecutable(type: Sync, dependsOn: ':conjure-java:distTar') {
    from tarTree(project(':conjure-java').tasks.distTar.outputs.files.singleFile)
    into "${project.buildDir}/conjure-java"
}

task generateVerifierObjectBindings(type: Exec, dependsOn: copyJavaExecutable) {
    commandLine "${-> copyJavaExecutable.outputs.files.singleFile.listFiles()[0]}/bin/conjure-java",
            'generate',
            "${-> configurations.verificationApi.singleFile}",
            'src/spec/java',
            '--objects'
}

task generateVerifierServerBindings(type: Exec, dependsOn: copyJavaExecutable) {
    commandLine "${-> copyJavaExecutable.outputs.files.singleFile.listFiles()[0]}/bin/conjure-java",
            'generate',
            "${-> configurations.verificationApi.singleFile}",
            'src/spec/java',
            '--jersey'
}

task unpackVerificationServer(type: Sync) {
    from { tarTree(configurations.verificationServer.singleFile) }
    into "${buildDir}/verification-server"
    rename { "server" }
}

task copyTestCases(type: Sync) {
    from configurations.testCases
    into "$buildDir/test-cases"
    rename { "test-cases.json" }
}

tasks.idea.dependsOn generateVerifierObjectBindings, generateVerifierServerBindings
tasks.idea.dependsOn copyTestCases, unpackVerificationServer

compileSpecJava.dependsOn generateVerifierObjectBindings, generateVerifierServerBindings
compileTestJava.dependsOn copyTestCases, unpackVerificationServer
